# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master
    tags:
      - v*.*

jobs:
  Compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -f pom.xml compile

  Test:
    runs-on: ubuntu-latest
    needs: Compile
    name: Test project
    steps:
      - uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn test --log-file testReport.txt
      - name: Upload Maven build artifact
        uses: actions/upload-artifact@v2
        with:
          name: testReport
          path: testReport.txt

  Assemble:
    runs-on: ubuntu-latest
    needs: Test
    name: Assemble project
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Package project
        run: mvn package
      - name: Copying target jar
        run: mkdir staging && cp target/*.jar staging
      - name: Uploading jar
        uses: actions/upload-artifact@v2
        with:
          name: buildJar
          path: staging

  Release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: Assemble
    name: Release project
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: buildJar
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}